{
  "version": 3,
  "sources": ["../../@ionic/core/components/hardware-back-button.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\n/**\r\n * When hardwareBackButton: false in config,\r\n * we need to make sure we also block the default\r\n * webview behavior. If we don't then it will be\r\n * possible for users to navigate backward while\r\n * an overlay is still open. Additionally, it will\r\n * give the appearance that the hardwareBackButton\r\n * config is not working as the page transition\r\n * will still happen.\r\n */\r\nconst blockHardwareBackButton = () => {\r\n  document.addEventListener('backbutton', () => { }); // eslint-disable-line\r\n};\r\nconst startHardwareBackButton = () => {\r\n  const doc = document;\r\n  let busy = false;\r\n  doc.addEventListener('backbutton', () => {\r\n    if (busy) {\r\n      return;\r\n    }\r\n    let index = 0;\r\n    let handlers = [];\r\n    const ev = new CustomEvent('ionBackButton', {\r\n      bubbles: false,\r\n      detail: {\r\n        register(priority, handler) {\r\n          handlers.push({ priority, handler, id: index++ });\r\n        },\r\n      },\r\n    });\r\n    doc.dispatchEvent(ev);\r\n    const executeAction = async (handlerRegister) => {\r\n      try {\r\n        if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\r\n          const result = handlerRegister.handler(processHandlers);\r\n          if (result != null) {\r\n            await result;\r\n          }\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n    const processHandlers = () => {\r\n      if (handlers.length > 0) {\r\n        let selectedHandler = {\r\n          priority: Number.MIN_SAFE_INTEGER,\r\n          handler: () => undefined,\r\n          id: -1,\r\n        };\r\n        handlers.forEach((handler) => {\r\n          if (handler.priority >= selectedHandler.priority) {\r\n            selectedHandler = handler;\r\n          }\r\n        });\r\n        busy = true;\r\n        handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\r\n        executeAction(selectedHandler).then(() => (busy = false));\r\n      }\r\n    };\r\n    processHandlers();\r\n  });\r\n};\r\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\r\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\r\n\r\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, startHardwareBackButton };\r\n"],
  "mappings": ";AAaA,IAAM,0BAA0B,MAAM;AACpC,WAAS,iBAAiB,cAAc,MAAM;AAAA,EAAE,CAAC;AACnD;AACA,IAAM,0BAA0B,MAAM;AACpC,QAAM,MAAM;AACZ,MAAI,OAAO;AACX,MAAI,iBAAiB,cAAc,MAAM;AACvC,QAAI,MAAM;AACR;AAAA,IACF;AACA,QAAI,QAAQ;AACZ,QAAI,WAAW,CAAC;AAChB,UAAM,KAAK,IAAI,YAAY,iBAAiB;AAAA,MAC1C,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,SAAS,UAAU,SAAS;AAC1B,mBAAS,KAAK,EAAE,UAAU,SAAS,IAAI,QAAQ,CAAC;AAAA,QAClD;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,cAAc,EAAE;AACpB,UAAM,gBAAgB,OAAO,oBAAoB;AAC/C,UAAI;AACF,YAAI,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB,SAAS;AAC7F,gBAAM,SAAS,gBAAgB,QAAQ,eAAe;AACtD,cAAI,UAAU,MAAM;AAClB,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF,SACO,GAAG;AACR,gBAAQ,MAAM,CAAC;AAAA,MACjB;AAAA,IACF;AACA,UAAM,kBAAkB,MAAM;AAC5B,UAAI,SAAS,SAAS,GAAG;AACvB,YAAI,kBAAkB;AAAA,UACpB,UAAU,OAAO;AAAA,UACjB,SAAS,MAAM;AAAA,UACf,IAAI;AAAA,QACN;AACA,iBAAS,QAAQ,CAAC,YAAY;AAC5B,cAAI,QAAQ,YAAY,gBAAgB,UAAU;AAChD,8BAAkB;AAAA,UACpB;AAAA,QACF,CAAC;AACD,eAAO;AACP,mBAAW,SAAS,OAAO,CAAC,YAAY,QAAQ,OAAO,gBAAgB,EAAE;AACzE,sBAAc,eAAe,EAAE,KAAK,MAAO,OAAO,KAAM;AAAA,MAC1D;AAAA,IACF;AACA,oBAAgB;AAAA,EAClB,CAAC;AACH;AACA,IAAM,+BAA+B;AACrC,IAAM,4BAA4B;",
  "names": []
}
