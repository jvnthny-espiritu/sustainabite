{
  "version": 3,
  "sources": ["../../@ionic/core/components/swipe-back.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { m as clamp } from './helpers.js';\r\nimport { i as isRTL } from './dir.js';\r\nimport { createGesture } from './index3.js';\r\n\r\nconst createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\r\n  const win = el.ownerDocument.defaultView;\r\n  let rtl = isRTL(el);\r\n  /**\r\n   * Determine if a gesture is near the edge\r\n   * of the screen. If true, then the swipe\r\n   * to go back gesture should proceed.\r\n   */\r\n  const isAtEdge = (detail) => {\r\n    const threshold = 50;\r\n    const { startX } = detail;\r\n    if (rtl) {\r\n      return startX >= win.innerWidth - threshold;\r\n    }\r\n    return startX <= threshold;\r\n  };\r\n  const getDeltaX = (detail) => {\r\n    return rtl ? -detail.deltaX : detail.deltaX;\r\n  };\r\n  const getVelocityX = (detail) => {\r\n    return rtl ? -detail.velocityX : detail.velocityX;\r\n  };\r\n  const canStart = (detail) => {\r\n    /**\r\n     * The user's locale can change mid-session,\r\n     * so we need to check text direction at\r\n     * the beginning of every gesture.\r\n     */\r\n    rtl = isRTL(el);\r\n    return isAtEdge(detail) && canStartHandler();\r\n  };\r\n  const onMove = (detail) => {\r\n    // set the transition animation's progress\r\n    const delta = getDeltaX(detail);\r\n    const stepValue = delta / win.innerWidth;\r\n    onMoveHandler(stepValue);\r\n  };\r\n  const onEnd = (detail) => {\r\n    // the swipe back gesture has ended\r\n    const delta = getDeltaX(detail);\r\n    const width = win.innerWidth;\r\n    const stepValue = delta / width;\r\n    const velocity = getVelocityX(detail);\r\n    const z = width / 2.0;\r\n    const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\r\n    const missing = shouldComplete ? 1 - stepValue : stepValue;\r\n    const missingDistance = missing * width;\r\n    let realDur = 0;\r\n    if (missingDistance > 5) {\r\n      const dur = missingDistance / Math.abs(velocity);\r\n      realDur = Math.min(dur, 540);\r\n    }\r\n    onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\r\n  };\r\n  return createGesture({\r\n    el,\r\n    gestureName: 'goback-swipe',\r\n    /**\r\n     * Swipe to go back should have priority over other horizontal swipe\r\n     * gestures. These gestures have a priority of 100 which is why 101 was chosen here.\r\n     */\r\n    gesturePriority: 101,\r\n    threshold: 10,\r\n    canStart,\r\n    onStart: onStartHandler,\r\n    onMove,\r\n    onEnd,\r\n  });\r\n};\r\n\r\nexport { createSwipeBackGesture };\r\n"],
  "mappings": ";;;;;;;;;;;;AAOA,IAAM,yBAAyB,CAAC,IAAI,iBAAiB,gBAAgB,eAAe,iBAAiB;AACnG,QAAM,MAAM,GAAG,cAAc;AAC7B,MAAI,MAAM,MAAM,EAAE;AAMlB,QAAM,WAAW,CAAC,WAAW;AAC3B,UAAM,YAAY;AAClB,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,KAAK;AACP,aAAO,UAAU,IAAI,aAAa;AAAA,IACpC;AACA,WAAO,UAAU;AAAA,EACnB;AACA,QAAM,YAAY,CAAC,WAAW;AAC5B,WAAO,MAAM,CAAC,OAAO,SAAS,OAAO;AAAA,EACvC;AACA,QAAM,eAAe,CAAC,WAAW;AAC/B,WAAO,MAAM,CAAC,OAAO,YAAY,OAAO;AAAA,EAC1C;AACA,QAAM,WAAW,CAAC,WAAW;AAM3B,UAAM,MAAM,EAAE;AACd,WAAO,SAAS,MAAM,KAAK,gBAAgB;AAAA,EAC7C;AACA,QAAM,SAAS,CAAC,WAAW;AAEzB,UAAM,QAAQ,UAAU,MAAM;AAC9B,UAAM,YAAY,QAAQ,IAAI;AAC9B,kBAAc,SAAS;AAAA,EACzB;AACA,QAAM,QAAQ,CAAC,WAAW;AAExB,UAAM,QAAQ,UAAU,MAAM;AAC9B,UAAM,QAAQ,IAAI;AAClB,UAAM,YAAY,QAAQ;AAC1B,UAAM,WAAW,aAAa,MAAM;AACpC,UAAM,IAAI,QAAQ;AAClB,UAAM,iBAAiB,YAAY,MAAM,WAAW,OAAO,QAAQ;AACnE,UAAM,UAAU,iBAAiB,IAAI,YAAY;AACjD,UAAM,kBAAkB,UAAU;AAClC,QAAI,UAAU;AACd,QAAI,kBAAkB,GAAG;AACvB,YAAM,MAAM,kBAAkB,KAAK,IAAI,QAAQ;AAC/C,gBAAU,KAAK,IAAI,KAAK,GAAG;AAAA,IAC7B;AACA,iBAAa,gBAAgB,aAAa,IAAI,OAAO,MAAM,GAAG,WAAW,MAAM,GAAG,OAAO;AAAA,EAC3F;AACA,SAAO,cAAc;AAAA,IACnB;AAAA,IACA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKb,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,EACF,CAAC;AACH;",
  "names": []
}
