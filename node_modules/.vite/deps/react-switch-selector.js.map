{
  "version": 3,
  "sources": ["../../goober/dist/goober.modern.js", "../../goober/should-forward-prop/dist/goober-should-forward-prop.modern.js", "../../react-switch-selector/src/SwitchSelector.styled.ts", "../../react-switch-selector/src/defaultColors.ts", "../../react-switch-selector/src/SwitchSelector.tsx"],
  "sourcesContent": ["let e={data:\"\"},t=t=>\"object\"==typeof window?((t?t.querySelector(\"#_goober\"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement(\"style\")),{innerHTML:\" \",id:\"_goober\"})).firstChild:t||e,r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g,a=/\\/\\*[^]*?\\*\\/|\\s\\s+|\\n/g,n=(e,t)=>{let r=\"\",l=\"\",a=\"\";for(let o in e){let s=e[o];\"@\"==o[0]?\"i\"==o[1]?r=o+\" \"+s+\";\":l+=\"f\"==o[1]?n(s,o):o+\"{\"+n(s,\"k\"==o[1]?\"\":t)+\"}\":\"object\"==typeof s?l+=n(s,t?t.replace(/([^,])+/g,e=>o.replace(/(^:.*)|([^,])+/g,t=>/&/.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):o):null!=s&&(o=/^--/.test(o)?o:o.replace(/[A-Z]/g,\"-$&\").toLowerCase(),a+=n.p?n.p(o,s):o+\":\"+s+\";\")}return r+(t&&a?t+\"{\"+a+\"}\":a)+l},o={},s=e=>{if(\"object\"==typeof e){let t=\"\";for(let r in e)t+=r+s(e[r]);return t}return e},c=(e,t,r,c,i)=>{let u=s(e),p=o[u]||(o[u]=(e=>{let t=0,r=11;for(;t<e.length;)r=101*r+e.charCodeAt(t++)>>>0;return\"go\"+r})(u));if(!o[p]){let t=u!==e?e:(e=>{let t,r=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]?r.shift():t[3]?r.unshift(r[0][t[3]]=r[0][t[3]]||{}):r[0][t[1]]=t[2];return r[0]})(e);o[p]=n(i?{[\"@keyframes \"+p]:t}:t,r?\"\":\".\"+p)}return((e,t,r)=>{-1==t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(o[p],t,c),p},i=(e,t,r)=>e.reduce((e,l,a)=>{let o=t[a];if(o&&o.call){let e=o(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;o=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":n(e,\"\"):!1===e?\"\":e}return e+l+(null==o?\"\":o)},\"\");function u(e){let r=this||{},l=e.call?e(r.p):e;return c(l.unshift?l.raw?i(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>Object.assign(e,t&&t.call?t(r.p):t),{}):l,t(r.target),r.g,r.o,r.k)}let p,d,f,g=u.bind({g:1}),b=u.bind({k:1});function h(e,t,r,l){n.p=t,p=e,d=r,f=l}function m(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let s=Object.assign({},n),c=s.className||a.className;r.p=Object.assign({theme:d&&d()},s),r.o=/ *go\\d+/.test(c),s.className=u.apply(r,l)+(c?\" \"+c:\"\"),t&&(s.ref=o);let i=e;return e[0]&&(i=s.as||e,delete s.as),f&&i[0]&&f(s),p(i,s)}return t?t(a):a}}export{u as css,r as extractCss,g as glob,b as keyframes,h as setup,m as styled};\n", "function e(e){return function(n){for(let t in n)e(t)||delete n[t]}}export{e as shouldForwardProp};\n", "import {createElement} from \"react\";\nimport {setup, styled} from \"goober\";\nimport {shouldForwardProp} from \"goober/should-forward-prop\";\nimport CSS from \"csstype\";\n\nconst propToOmitInDom = [\n    \"fontSize\",\n    \"fontColor\",\n    \"selectedFontColor\",\n    \"optionsAmount\",\n    \"optionBorderRadius\",\n    \"isRawText\",\n    \"selectedIndex\",\n    \"border\",\n    \"backgroundColor\",\n    \"selectedBackgroundColor\",\n    \"wrapperBorderRadius\",\n    \"selectionIndicatorMargin\",\n    \"disabled\"\n];\n\nsetup(\n    createElement,\n    undefined,\n    undefined,\n    shouldForwardProp((prop) => !propToOmitInDom.includes(prop))\n);\n\nexport type StylingPropsTypes = {\n    border: string | number;\n    backgroundColor: string;\n    selectedBackgroundColor: string;\n    wrapperBorderRadius: number | CSS.Property.BorderRadius<string>;\n    optionBorderRadius: number | CSS.Property.BorderRadius<string>;\n    fontSize: number;\n    fontColor: string;\n    selectedFontColor: string;\n    selectionIndicatorMargin: number;\n};\n\ninterface SwitchSelectorWrapperPropTypes\n    extends Pick<\n        StylingPropsTypes,\n        | \"border\"\n        | \"backgroundColor\"\n        | \"selectedBackgroundColor\"\n        | \"wrapperBorderRadius\"\n        | \"optionBorderRadius\"\n        | \"selectionIndicatorMargin\"\n    > {\n    selectedIndex: number;\n    optionsAmount: number;\n    disabled: boolean;\n}\n\nexport const SwitchSelectorWrapper = styled(\"div\")<SwitchSelectorWrapperPropTypes>`\n    display: flex;\n    border-radius: ${({wrapperBorderRadius}) =>\n        typeof wrapperBorderRadius === \"number\" ? `${wrapperBorderRadius}px` : wrapperBorderRadius};\n    border: ${(props) => props.border};\n    background: ${(props) => props.backgroundColor};\n    width: 100%;\n    height: 100%;\n    position: relative;\n    opacity: ${(props) => (props.disabled ? 0.7 : 1)};\n    overflow: hidden;\n\n    &::before {\n        top: 50%;\n        left: ${(props) => (props.selectedIndex / props.optionsAmount) * 100}%;\n        content: \"\";\n        position: absolute;\n        height: calc(100% - ${(props) => 2 * props.selectionIndicatorMargin}px);\n        width: calc(\n            ${(props) => (1 / props.optionsAmount) * 100}%${\" - \"}${(props) =>\n                    2 * props.selectionIndicatorMargin}px\n        );\n        border-radius: ${({optionBorderRadius}) =>\n            typeof optionBorderRadius === \"number\"\n                ? `${optionBorderRadius}px`\n                : optionBorderRadius};\n        border: ${(props) => props.selectionIndicatorMargin}px solid\n            ${(props) => props.backgroundColor};\n        background: ${(props) => props.selectedBackgroundColor};\n        transition: left 0.1s linear, background 0.1s linear;\n        transform: translateY(-50%);\n        z-index: 1;\n        box-sizing: content-box;\n    }\n`;\n\ninterface OptionItemPropsTypes extends Pick<StylingPropsTypes, \"optionBorderRadius\"> {\n    optionsAmount: number;\n}\n\nexport const OptionItem = styled(\"div\")<OptionItemPropsTypes>`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    width: ${(props) => (1 / props.optionsAmount) * 100}%;\n    border-radius: ${({optionBorderRadius}) =>\n        typeof optionBorderRadius === \"number\" ? `${optionBorderRadius}px` : optionBorderRadius};\n`;\n\ninterface OptionItemLabelPropsTypes\n    extends Partial<Pick<StylingPropsTypes, \"fontSize\" | \"fontColor\" | \"selectedFontColor\">> {\n    isRawText: boolean;\n    selected: boolean;\n    disabled: boolean;\n}\n\nexport const OptionItemLabel = styled(\"label\")<OptionItemLabelPropsTypes>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n    transition: color 0.1s linear;\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n    font-size: ${(props) => (props.isRawText ? props.fontSize + \"px\" : \"unset\")};\n    color: ${(props) =>\n        props.isRawText ? (props.selected ? props.selectedFontColor : props.fontColor) : \"unset\"};\n`;\n\nexport const OptionInput = styled(\"input\")`\n    width: 0;\n    height: 0;\n    opacity: 0;\n    z-index: -1;\n    position: absolute;\n    pointer-events: none;\n`;\n", "export const defaultColors = {\n    backgroundColor: \"#ecf0f1\",\n    selectedBackgroundColor: \"#2ecc71\",\n    fontColor: \"#000\",\n    selectedFontColor: \"#fff\"\n};\n", "import React, {FC, useState, useEffect} from \"react\";\nimport {\n    SwitchSelectorWrapper,\n    OptionItem,\n    OptionItemLabel,\n    OptionInput\n} from \"./SwitchSelector.styled\";\nimport {SwitchSelectorProps} from \"./SwitchSelector.props\";\nimport {defaultColors} from \"./defaultColors\";\n\nconst CLASS_NAMES_PREFIX = \"react-switch-selector\";\n\nconst SwitchSelector: FC<SwitchSelectorProps> = (props) => {\n    const {onChange = (): void => {}, options = [], initialSelectedIndex = 0} = props;\n    const canApplyInitialSelectedIndex = !!options[initialSelectedIndex];\n    const [selectedIndex, setSelectedIndex] = useState(\n        canApplyInitialSelectedIndex ? initialSelectedIndex : 0\n    );\n\n    const {\n        border = 0,\n        backgroundColor = defaultColors.backgroundColor,\n        selectedBackgroundColor = defaultColors.selectedBackgroundColor,\n        wrapperBorderRadius = 20,\n        optionBorderRadius = 18,\n        fontSize = 14,\n        fontColor = defaultColors.fontColor,\n        selectedFontColor = defaultColors.selectedFontColor,\n        selectionIndicatorMargin = 2,\n        forcedSelectedIndex,\n        disabled = false,\n        name\n    } = props;\n\n    useEffect(() => {\n        if (\n            forcedSelectedIndex !== undefined &&\n            !!options[forcedSelectedIndex] &&\n            forcedSelectedIndex !== selectedIndex\n        ) {\n            setSelectedIndex(forcedSelectedIndex);\n        }\n    }, [forcedSelectedIndex, options, selectedIndex]);\n\n    const handleOnClick = (index: number): void => {\n        if (!disabled && index !== selectedIndex) {\n            setSelectedIndex(index);\n            onChange(options[index].value);\n        }\n    };\n\n    const renderOptions = (): React.ReactElement[] => {\n        return options.map((option, index) => {\n            const isSelected = selectedIndex === index;\n            const optionId = `${name ?? \"rss\"}-option-${index}`;\n            const isRawText = typeof option.label === \"string\";\n\n            const labelRawTextProps = {\n                fontSize,\n                fontColor: option.fontColor || fontColor,\n                selectedFontColor: option.selectedFontColor || selectedFontColor\n            };\n\n            return (\n                <OptionItem\n                    key={optionId}\n                    optionsAmount={options.length}\n                    className={`${CLASS_NAMES_PREFIX}-option ${CLASS_NAMES_PREFIX}-option-${\n                        isSelected ? \"selected\" : \"unselected\"\n                    }`}\n                    optionBorderRadius={optionBorderRadius}\n                >\n                    <OptionItemLabel\n                        className={`${CLASS_NAMES_PREFIX}-option-label`}\n                        selected={isSelected}\n                        isRawText={isRawText}\n                        disabled={disabled}\n                        aria-disabled={disabled}\n                        htmlFor={optionId}\n                        {...(isRawText ? labelRawTextProps : {})}\n                    >\n                        <OptionInput\n                            type=\"radio\"\n                            id={optionId}\n                            name={name}\n                            onChange={(): void => handleOnClick(index)}\n                            checked={isSelected}\n                            aria-checked={isSelected}\n                            tabIndex={isSelected ? 0 : -1}\n                        />\n                        {option.label}\n                    </OptionItemLabel>\n                </OptionItem>\n            );\n        });\n    };\n\n    if (!options.length) return null;\n    return (\n        <SwitchSelectorWrapper\n            selectedIndex={selectedIndex}\n            optionsAmount={options.length}\n            className={`${CLASS_NAMES_PREFIX}-wrapper ${\n                disabled ? `${CLASS_NAMES_PREFIX}-disabled` : \"\"\n            }`}\n            border={border}\n            backgroundColor={backgroundColor}\n            selectedBackgroundColor={\n                options[selectedIndex]?.selectedBackgroundColor || selectedBackgroundColor\n            }\n            wrapperBorderRadius={wrapperBorderRadius}\n            optionBorderRadius={optionBorderRadius}\n            selectionIndicatorMargin={selectionIndicatorMargin}\n            disabled={disabled}\n            role={\"radiogroup\"}\n            aria-labelledby={name}\n        >\n            {renderOptions()}\n        </SwitchSelectorWrapper>\n    );\n};\n\nexport default SwitchSelector;\n"],
  "mappings": "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",
  "names": ["t", "e", "t", "r", "l", "a", "o", "s", "c", "i", "u", "p", "n", "e", "n", "t", "propToOmitInDom", "setup", "createElement", "undefined", "shouldForwardProp", "prop", "includes", "SwitchSelectorWrapper", "styled", "wrapperBorderRadius", "props", "border", "backgroundColor", "disabled", "selectedIndex", "optionsAmount", "selectionIndicatorMargin", "optionBorderRadius", "selectedBackgroundColor", "OptionItem", "OptionItemLabel", "isRawText", "fontSize", "selected", "selectedFontColor", "fontColor", "OptionInput", "defaultColors", "onChange", "options", "initialSelectedIndex", "canApplyInitialSelectedIndex", "setSelectedIndex", "useState", "forcedSelectedIndex", "name", "useEffect", "length", "React", "className", "role", "map", "option", "index", "isSelected", "optionId", "label", "key", "htmlFor", "type", "id", "value", "checked", "tabIndex"]
}
